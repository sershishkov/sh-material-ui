[{"D:\\001_myProjects\\001_javaScript\\material_react\\src\\index.js":"1","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\App.js":"2","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\ui\\Header.js":"3","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\ui\\Theme.js":"4","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\ui\\Footer.js":"5","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\Landing\\LandingPage.js":"6","D:\\001_myProjects\\001_javaScript\\material_react\\src\\animations\\landinganimation\\data.js":"7","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\helper\\ButtonArrow.js":"8","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\callToAction\\CallToAction.js":"9","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\services\\Services.js":"10","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\customSoftware\\CustomSoftware.js":"11","D:\\001_myProjects\\001_javaScript\\material_react\\src\\animations\\documentsAnimation\\data.js":"12","D:\\001_myProjects\\001_javaScript\\material_react\\src\\animations\\uxAnimation\\data.js":"13","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\mobileApps\\MobileApps.js":"14","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\websites\\Websites.js":"15","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\revolution\\Revolution.js":"16","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\about\\About.js":"17","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\contact\\Contact.js":"18"},{"size":158,"mtime":1606503212232,"results":"19","hashOfConfig":"20"},{"size":3595,"mtime":1608904231390,"results":"21","hashOfConfig":"20"},{"size":10629,"mtime":1607706056173,"results":"22","hashOfConfig":"20"},{"size":2100,"mtime":1608909386408,"results":"23","hashOfConfig":"20"},{"size":7504,"mtime":1607528236139,"results":"24","hashOfConfig":"20"},{"size":14911,"mtime":1607710235555,"results":"25","hashOfConfig":"20"},{"size":3976,"mtime":1607259551765,"results":"26","hashOfConfig":"20"},{"size":404,"mtime":1607263320531,"results":"27","hashOfConfig":"20"},{"size":3598,"mtime":1607709930707,"results":"28","hashOfConfig":"20"},{"size":6953,"mtime":1607766055089,"results":"29","hashOfConfig":"20"},{"size":15880,"mtime":1607882534583,"results":"30","hashOfConfig":"20"},{"size":2724,"mtime":1572353028000,"results":"31","hashOfConfig":"20"},{"size":25402,"mtime":1572348262000,"results":"32","hashOfConfig":"20"},{"size":8728,"mtime":1607966982623,"results":"33","hashOfConfig":"20"},{"size":9315,"mtime":1608133695215,"results":"34","hashOfConfig":"20"},{"size":29549,"mtime":1608313762167,"results":"35","hashOfConfig":"20"},{"size":9664,"mtime":1608898196226,"results":"36","hashOfConfig":"20"},{"size":8217,"mtime":1608911510339,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ssocvm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\001_myProjects\\001_javaScript\\material_react\\src\\index.js",[],["78","79"],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\App.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\ui\\Header.js",["80"],"import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import ExpandLess from '@material-ui/icons/ExpandLess';\r\n// import ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: '3em',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginBottom: '2em',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: '1.25em',\r\n    },\r\n  },\r\n  logo: {\r\n    height: '8em',\r\n    [theme.breakpoints.down('md')]: {\r\n      height: '7em',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '5.5em',\r\n    },\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  tabContainer: {\r\n    marginLeft: 'auto',\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: '25px',\r\n  },\r\n  button: {\r\n    ...theme.typography.estimate,\r\n    borderRadius: '50px',\r\n    marginRight: '50px',\r\n    marginLeft: '25px',\r\n    height: '45px',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n  menu: {\r\n    '&::-webkit-scrollbar': {\r\n      width: 0,\r\n    },\r\n    backgroundColor: theme.palette.common.blue,\r\n    color: 'white',\r\n    borderRadius: '0px',\r\n  },\r\n  menuItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  drawerIconContainer: {\r\n    marginLeft: 'auto',\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  drawerIcon: {\r\n    height: '50px',\r\n    width: '50px',\r\n  },\r\n  drawer: {\r\n    backgroundColor: theme.palette.common.blue,\r\n  },\r\n  drawerItem: {\r\n    ...theme.typography.tab,\r\n    color: 'white',\r\n    opacity: 0.7,\r\n  },\r\n  drawerItemEstimate: {\r\n    backgroundColor: theme.palette.common.orange,\r\n  },\r\n  drawerItemSelected: {\r\n    '$ .MuiListItemText-root': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  appbar: {\r\n    zIndex: theme.zIndex.modal + 1,\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    props.setValue(newValue);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    // console.log(event.currentTarget);\r\n    setAnchorEl(event.currentTarget);\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    props.setSelectedIndex(index);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const menuOptions = [\r\n    { name: 'Services', link: '/services', activeIndex: 1, selectedIndex: 0 },\r\n    {\r\n      name: 'Custom sofware development',\r\n      link: '/customsofware',\r\n      activeIndex: 1,\r\n      selectedIndex: 1,\r\n    },\r\n    {\r\n      name: 'iOS/Android App Development',\r\n      link: '/mobileapps',\r\n      activeIndex: 1,\r\n      selectedIndex: 2,\r\n    },\r\n    {\r\n      name: 'WebSite Development',\r\n      link: '/websites',\r\n      activeIndex: 1,\r\n      selectedIndex: 3,\r\n    },\r\n  ];\r\n\r\n  const routes = [\r\n    { name: 'Home', link: '/', activeIndex: 0 },\r\n    {\r\n      name: 'Services',\r\n      link: '/services',\r\n      activeIndex: 1,\r\n      ariaOwns: anchorEl ? 'sh-menu-for-services' : undefined,\r\n      ariaPopup: anchorEl ? true : undefined,\r\n      mouseOver: (event) => handleClick(event),\r\n    },\r\n    { name: 'The revolution', link: '/revolution', activeIndex: 2 },\r\n    { name: 'About us', link: '/about', activeIndex: 3 },\r\n    { name: 'Contact us', link: '/contact', activeIndex: 4 },\r\n    // { name: 'Free Estimate', link: '/estimate' },\r\n  ];\r\n\r\n  // const routesList = useMemo(routes, [routes]);\r\n  // const menuOptionsList = useMemo(menuOptions, [menuOptions]);\r\n\r\n  useEffect(() => {\r\n    [...menuOptions, ...routes].forEach((route, index) => {\r\n      switch (window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (props.value !== route.activeIndex) {\r\n            props.setValue(route.activeIndex);\r\n            if (\r\n              route.selectedIndex &&\r\n              route.selectedIndex !== props.selectedIndex\r\n            ) {\r\n              props.setSelectedIndex(route.selectedIndex);\r\n            }\r\n          }\r\n          break;\r\n        case '/estimate':\r\n          props.setValue(5);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }, [props.value, props.selectedIndex, props]);\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs\r\n        value={props.value}\r\n        onChange={handleChange}\r\n        className={classes.tabContainer}\r\n        indicatorColor='primary'\r\n      >\r\n        {routes.map((route, index) => (\r\n          <Tab\r\n            key={route.name}\r\n            className={classes.tab}\r\n            component={Link}\r\n            to={route.link}\r\n            label={route.name}\r\n            aria-owns={route.ariaOwns}\r\n            aria-haspopup={route.ariaPopup}\r\n            onMouseOver={route.mouseOver}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n      <Button\r\n        className={classes.button}\r\n        variant='contained'\r\n        color='secondary'\r\n        component={Link}\r\n        to='/estimate'\r\n        onClick={() => props.setValue(5)}\r\n      >\r\n        Free Estimate\r\n      </Button>\r\n      <Menu\r\n        id='sh-menu-for-services'\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        MenuListProps={{ onMouseLeave: handleClose }}\r\n        classes={{ paper: classes.menu }}\r\n        elevation={0}\r\n        style={{ zIndex: 1302 }}\r\n        keepMounted\r\n      >\r\n        {menuOptions.map((option, index) => (\r\n          <MenuItem\r\n            key={option.name}\r\n            onClick={(event) => {\r\n              handleClose();\r\n              props.setValue(1);\r\n              handleMenuItemClick(event, index);\r\n            }}\r\n            component={Link}\r\n            to={option.link}\r\n            classes={{ root: classes.menuItem }}\r\n            selected={index === props.selectedIndex && props.value === 1}\r\n          >\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const drawer = (\r\n    <React.Fragment>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        onOpen={() => setOpenDrawer(true)}\r\n        classes={{ paper: classes.drawer }}\r\n      >\r\n        <div className={classes.toolbarMargin}></div>\r\n        <List disablePadding>\r\n          {routes.map((route, index) => (\r\n            <ListItem\r\n              key={route.name}\r\n              component={Link}\r\n              to={route.link}\r\n              divider\r\n              button\r\n              classes={{ selected: classes.drawerItemSelected }}\r\n              onClick={() => {\r\n                setOpenDrawer(false);\r\n                props.setValue(index);\r\n              }}\r\n              selected={props.value === index}\r\n            >\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography className={classes.drawerItem}>\r\n                {route.name}\r\n              </ListItemText>\r\n            </ListItem>\r\n          ))}\r\n          <ListItem\r\n            component={Link}\r\n            to='/estimate'\r\n            divider\r\n            button\r\n            classes={{\r\n              root: classes.drawerItemEstimate,\r\n              selected: classes.drawerItemSelected,\r\n            }}\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              props.setValue(5);\r\n            }}\r\n            selected={props.value === 5}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText disableTypography className={classes.drawerItem}>\r\n              Free Estimate\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </SwipeableDrawer>\r\n      <IconButton\r\n        className={classes.drawerIconContainer}\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        disableRipple\r\n      >\r\n        <MenuIcon className={classes.drawerIcon} />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElevationScroll>\r\n        <AppBar className={classes.appbar}>\r\n          <Toolbar disableGutters>\r\n            <Button\r\n              className={classes.logoContainer}\r\n              component={Link}\r\n              to='/'\r\n              onClick={() => props.setValue(0)}\r\n              disableRipple\r\n            >\r\n              <img src={logo} alt='company logo' className={classes.logo} />\r\n            </Button>\r\n\r\n            {matches ? drawer : tabs}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <div className={classes.toolbarMargin} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\ui\\Theme.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\ui\\Footer.js",[],["81","82"],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\Landing\\LandingPage.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\animations\\landinganimation\\data.js",[],["83","84"],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\helper\\ButtonArrow.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\callToAction\\CallToAction.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\services\\Services.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\customSoftware\\CustomSoftware.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\animations\\documentsAnimation\\data.js",["85"],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\animations\\uxAnimation\\data.js",["86"],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\mobileApps\\MobileApps.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\websites\\Websites.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\revolution\\Revolution.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\about\\About.js",[],"D:\\001_myProjects\\001_javaScript\\material_react\\src\\components\\contact\\Contact.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":223,"column":6,"nodeType":"93","endLine":223,"endColumn":47,"suggestions":"94"},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"87","replacedBy":"97"},{"ruleId":"89","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":1,"nodeType":"101","endLine":111,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":21,"column":1,"nodeType":"101","endLine":930,"endColumn":3},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'menuOptions' and 'routes'. Either include them or remove the dependency array.","ArrayExpression",["104"],["102"],["103"],["102"],["103"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [props.value, props.selectedIndex, props, menuOptions, routes]",{"range":"107","text":"108"},[6074,6115],"[props.value, props.selectedIndex, props, menuOptions, routes]"]